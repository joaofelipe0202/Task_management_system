@model List<Task_Managment_System.Models.Project>

<style>
    .projects-container {
        width: 1100px;
        display: flex;
        flex-wrap:wrap;
        justify-content:normal;
        height:840px;
        overflow-y:scroll;
    }

    .projects-container li {
        list-style: none;
    }

    .projects-container::-webkit-scrollbar {
        display: none;
    }

    .project-box {
        width: 240px;
        height: 400px;
        padding: 8px;
        margin: 8px;
        border: 1px solid black;
        border-radius: 3px;
        cursor: pointer;
        overflow: hidden;
        transition: all 0.5s;
    }

    .project-box h5 {
        text-align:center;
    }


    .project-box:last-child {
        background-color: white;
    }

    .tasks-container {
        margin-top:30px;
    }

    .tasks-container ul {
        overflow-y: scroll;
        padding: 5px;
        height: 190px;
    }


    .tasks-container li {
        border:1px dotted black;
        padding:5px;
    }

    .btn-create-project {
        margin:8px;
    }
</style>

<h2>Dashboard</h2>

<section class="box-container">
    <ul class="projects-container">
        @foreach (var project in Model)
        {
            string levelClass = null;

            switch (project.Priority)
            {
                case Task_Managment_System.Models.Priority.Urgent:
                    levelClass = "list-group-item-danger";
                    break;
                case Task_Managment_System.Models.Priority.High:
                    levelClass = "list-group-item-warning";
                    break;
                case Task_Managment_System.Models.Priority.Average:
                    levelClass = "list-group-item-info";
                    break;
            }
            var managerName = project.Creator == null ? "" : project.Creator.UserName;

            <li class="project-box @levelClass" onclick="boxAnimation(event)">
                <h5>@Html.ActionLink(project.Name, "ProjectDetails", new { projectId=project.Id})</h5>
                <div>Manager: @managerName</div>
                <div>Priority: @project.Priority</div>

                <div class="tasks-container">
                    <h5>@Html.ActionLink("Tasks", "ShowTasksFor",new { projectId = project.Id})</h5>
                    <ul>

                        @foreach (var task in project.Tasks)
                        {
                            var assignedUser = task.AssignedUser == null ? "Not developers are assigned" : task.AssignedUser.UserName;

                            <li>
                                <h7>@task.Title</h7>
                                <div>Created by: @task.Manager.UserName</div>
                                <div>Assigned developer: @assignedUser</div>
                            </li>
                        }
                    </ul>
                </div>       
            </li>
        }

        <li>
            @Html.ActionLink("Create new project", "CreateNewProject", null, new { @class= "btn btn-primary btn-create-project" })
        </li>
    </ul>
    
</section>

<script>
</script>